# For deployment testing
# Uses self-signed certificate

version: '3.9'

services:
  nginx-proxy-dep-test:
    container_name: nginx-proxy-dep-test
    image: "nginx:stable"
    depends_on:
      - "earthquake-hub-backend-dep-test"
      - "earthquake-hub-frontend-dep-test"
    networks:
      app-network:
        ipv4_address: 172.21.0.10
    ports:  # expose nginx ports to host
      - "80:80"
      - "443:443"
    extra_hosts:
       - "host.docker.internal:host-gateway"
    volumes:
      - ./https_data/nginx.dep-test.d:/etc/nginx/conf.d:ro     # Mount read-only access to nginx conf file. TODO: This should change on production compose file
                                                               # NOTE: There are multiple nginx conf files in this directory, rename what you want to use into nginx.dep-test.conf. 
                                                               #       Make sure that only one file has .conf as this is what'll be used by nginx.
      - ./https_data/certbot/www:/var/www/certbot:ro           # Certbot will write a token in this dir, served by nginx on well-known/acme-challenge/:80 route
      - ./https_data/certbot/conf:/etc/nginx/ssl:ro            # Certbot will write the certs into this (/etc/nginx/ssl), used by nginx as ssl_certificate and ssl_certificate_key
                                                               #   under the directory /etc/nginx/ssl/live/<domain-name>/<fullchain-or-privkey>.pem;
                                                               # Run the following command to renew the certificates:
                                                               #   docker compose run --rm certbot renew
# For now, do not use certbot for local testing
#  certbot:
#    image: certbot/certbot
#    volumes:
#      - ./https_data/certbot/conf:/etc/letsencrypt:rw
#      - ./https_data/certbot/www:/var/www/certbot:rw

  earthquake-hub-frontend-dep-test:
    container_name: earthquake-hub-frontend-dep-test
    environment:
      REACT_APP_PUBLIC_VAPID_KEY: ${REACT_APP_PUBLIC_VAPID_KEY}
      REACT_APP_BACKEND: ${REACT_APP_BACKEND}
      REACT_APP_FDSNWS: ${REACT_APP_FDSNWS}
      REACT_APP_RS_FDSNWS: ${REACT_APP_RS_FDSNWS}
      REACT_APP_RINGSERVER_WS: ${REACT_APP_RINGSERVER_WS}
    image: "ghcr.io/upri-earthquake/earthquake-hub-frontend:latest"
    depends_on:
      - "earthquake-hub-backend-dep-test"
    expose:
      - "3000"
    extra_hosts:
       - "host.docker.internal:host-gateway"
    networks:
      app-network:
        ipv4_address: 172.21.0.2

  earthquake-hub-backend-dep-test:
    container_name: earthquake-hub-backend-dep-test
    environment: # load env vars from docker compose --env-file
      MONGO_CONNX_TYPE: ${MONGO_CONNX_TYPE}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_NAME: ${MONGO_NAME}

      # webpush notifications VAPID keys
      PUBLIC_VAPID_KEY: ${PUBLIC_VAPID_KEY}
      PRIVATE_VAPID_KEY: ${PRIVATE_VAPID_KEY}
      WEB_PUSH_CONTACT: ${WEB_PUSH_CONTACT}

      # Granular reverse-geolocation
      GEOSERVE_HOST: ${GEOSERVE_HOST}
      GEOSERVE_PORT: ${GEOSERVE_PORT}

      # production host domain (and for deployment testing)
      W3_CLIENT_PROD_HOST: ${W3_CLIENT_PROD_HOST}
      CLIENT_PROD_HOST: ${CLIENT_PROD_HOST}
      BACKEND_PROD_HOST: ${BACKEND_PROD_HOST}
      BACKEND_PROD_PORT: ${BACKEND_PROD_PORT}

      #ringserver host
      RINGSERVER_HOST: ${RINGSERVER_HOST}
      RINGSERVER_PORT: ${RINGSERVER_PORT}

      # jsonwebtoken keys
      ACCESS_TOKEN_PRIVATE_KEY: ${ACCESS_TOKEN_PRIVATE_KEY}
    depends_on:
      - "mongodb-dep-test"
    image: "ghcr.io/upri-earthquake/earthquake-hub-backend:latest"
    expose:
      - "5000"
    extra_hosts:
       - "host.docker.internal:host-gateway"
    networks:
      app-network:
        ipv4_address: 172.21.0.3

  ringserver-dep-test:
    container_name: ringserver-dep-test
    image: "ghcr.io/upri-earthquake/receiver-ringserver:latest"
    expose:
      - "16000"
      - "18000"
    networks:
      app-network:
        ipv4_address: 172.21.0.6
    ports:
      - "16000:16000" # make host's 16000 connect to RS's 16000
    volumes:
      - type: bind
        source: ./ringserver-configs
        target: /app/host-configs
    user: root
    entrypoint: /app/host-configs/entrypoint.sh

  mongodb-dep-test:
    container_name: mongodb-dep-test
    image: "mongo:5.0"
    volumes:
      - type: volume
        source: earthquake-hub-mongodb-data
        target: /data/db
    expose:
      - "27017"
    networks:
      app-network:
        ipv4_address: 172.21.0.4


# TODO: Add admin-frontend
# TODO: Add admin-backend

# Geoserve is used to convert (long, lat) to city-names.
# The images are available as bare-metal builds in the server
# Let's not use it for local testing for now as building these
# images takes a while
#
#  geoserve-db:
#    build:
#      context: ../hazdev-geoserve-ws
#      dockerfile: Dockerfile-db
#    image: "usgs/hazdev-geoserve-db:latest"
#    environment:
#      - DATALOAD_DIR=/tmp/dataload
#      - DB_ADMIN_USER=postgres
#      - DB_ADMIN_PASSWORD=sysop-admin-postgres
#      - DB_LOAD_TYPE=incremental
#      - DB_NAME=earthquake
#      - DB_USER=web
#      - DB_PASS=sysop-postgres
#      - DB_SCHEMA=geoserve
#      - DB_ADMIN_DSN=pgsql:dbname=earthquake
#      - PGDATA=/var/lib/postgresqsl/data/pgdata
#      - POSTGRES_PASSWORD=sysop-admin-postgres
#    volumes:
#      # volume to store downloaded data files
#      - ../hazdev-geoserve-ws/data/dataload:/tmp/dataload
#      # volume to store database data files
#      - ../hazdev-geoserve-ws/data/pgdata:/var/lib/postgresqsl/data/pgdata
#    networks:
#      app-network:
#        ipv4_address: 172.21.0.6
#
#  geoserve-ws:
#    build:
#      context: ../hazdev-geoserve-ws
#      dockerfile: Dockerfile-ws
#    image: "usgs/hazdev-geoserve-ws:latest"
#    environment:
#      - DB_DSN=pgsql:host=geoserve-db;port=5432;dbname=earthquake
#      - DB_USER=web
#      - DB_PASS=sysop-postgres
#      - DB_SCHEMA=geoserve
#    volumes:
#      # volumes for local dev
#      - ../hazdev-geoserve-ws/src/htdocs:/var/www/apps/hazdev-geoserve-ws/htdocs
#      - ../hazdev-geoserve-ws/src/lib:/var/www/apps/hazdev-geoserve-ws/lib
#    expose:
#      - "80"
#    networks:
#      app-network:
#        ipv4_address: 172.21.0.7

volumes:
  earthquake-hub-mongodb-data-dep-test:
    external: true # same volume used by other containers
    name: earthquake-hub-mongodb-data-dep-test

networks:
  app-network:
    name: earthquake-hub-network-dep-test
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16


